{"version":3,"file":"histore.m.js","sources":["../histore.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default function histore() {\n\t// Server\n\tif (typeof history === 'undefined') {\n\t\treturn { get() {}, set() {}, reset() {}, flush() {} };\n\t}\n\n\tlet initialized = true\n\tif (window.__histore_transit === undefined) {\n\t\twindow.__histore_transit = {}\n\t\tinitialized = false\n\t}\n\n\tconst get = key => history.state && history.state[key]\n\tconst set = (key, value) => {\n\t\twindow.__histore_transit[key] = value;\n\t}\n\n\tconst getTransit = key => window.__histore_transit[key]\n\n\tconst reset = (state) => {\n\t\twindow.__histore_reset = state;\n\t}\n\n\tconst flush = () => {\n\t\thistory.replaceState(window.__histore_transit);\n\t}\n\n\tconst wrapReplace = m => (state, title, url) => {\n\t\treturn m.call(history, Object.assign({}, history.state, state || {}), title, url)\n\t}\n\n\tconst wrapPush = m => (state, title, url) => {\n\t\thistory.replaceState(window.__histore_transit)\n\n\t\tif (window.__histore_reset !== undefined) {\n\t\t\tfor (var prop in window.__histore_reset) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(window.__histore_reset, prop)) {\n\t\t\t\t\twindow.__histore_transit[prop] = window.__histore_reset[prop]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn m.call(history, Object.assign({}, history.state, state || {}, window.__histore_transit), title, url)\n\t}\n\n\tif (!initialized) {\n\t\thistory.pushState = wrapPush(history.pushState);\n\t\thistory.replaceState = wrapReplace(history.replaceState);\n\t}\n\n\treturn { set, get, getTransit, flush, reset };\n}\n"],"names":["history","get","set","reset","flush","let","m","initialized","undefined","window","__histore_transit","pushState","state","title","url","replaceState","__histore_reset","prop","Object","prototype","hasOwnProperty","call","assign","wrapReplace","key","value"],"mappings":"eAae,WAEd,GAAuB,oBAAZA,QACV,OAASC,iBAAUC,iBAAUC,mBAAYC,oBAG1CC,IAyBiBC,EAzBbC,GAAc,EA4ClB,YA3CiCC,IAA7BC,OAAOC,oBACVD,OAAOC,qBACPH,GAAc,GAoCVA,IACJP,QAAQW,WAfQL,EAeaN,QAAQW,mBAffC,EAAOC,EAAOC,GAGpC,GAFAd,QAAQe,aAAaN,OAAOC,wBAEGF,IAA3BC,OAAOO,gBACV,IAAK,IAAIC,KAAQR,OAAOO,gBACnBE,OAAOC,UAAUC,eAAeC,KAAKZ,OAAOO,gBAAiBC,KAChER,OAAOC,kBAAkBO,GAAQR,OAAOO,gBAAgBC,IAK3D,OAAOX,EAAEe,KAAKrB,QAASkB,OAAOI,UAAWtB,QAAQY,MAAOA,MAAaH,OAAOC,mBAAoBG,EAAOC,KAKvGd,QAAQe,sBApBWT,mBAAMM,EAAOC,EAAOC,UAChCR,EAAEe,KAAKrB,QAASkB,OAAOI,UAAWtB,QAAQY,MAAOA,OAAcC,EAAOC,IAmBtDS,CAAYvB,QAAQe,6BAlC/BS,EAAKC,GACjBhB,OAAOC,kBAAkBc,GAAOC,gBAFrBD,UAAOxB,QAAQY,OAASZ,QAAQY,MAAMY,wBAK/BA,UAAOf,OAAOC,kBAAkBc,qBAOlDxB,QAAQe,aAAaN,OAAOC,mCALdE,GACdH,OAAOO,gBAAkBJ"}