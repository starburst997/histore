{"version":3,"file":"histore.m.js","sources":["../histore.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default function histore() {\n\t// Server\n\tif (typeof history === 'undefined') {\n\t\treturn { get() {}, set () {} };\n\t}\n\n\tlet transit = {}\n\tlet empty = {}\n\n\tconst previousReplaceState = history.replaceState\n\tconst previousPushState = history.pushState\n\n\tconst get = key => history.state && history.state[key];\n\tconst set = (key, value) => {\n\t\ttransit[key] = value;\n\t\tconsole.log(`*** Set transit: ${key} / ${value}`)\n\n\t\t//const state = {};\n\t\t//state[key] = value;\n\t\t//history.replaceState(state);\n\t};\n\tconst setEmpty = (obj) => {\n\t\tempty = obj;\n\t};\n\tconst flush = () => {\n\t\tconsole.log(`*** Flush:`)\n\t\tconsole.log(transit)\n\n\t\thistory.replaceState(transit);\n\t}\n\tconst wrapPush = m => (state, title, url) => {\n\t\tconsole.log(`PushState called`)\n\n\t\tpreviousReplaceState(Object.assign({}, history.state, transit))\n\n\t\t// Reset transit\n\t\ttransit = {}\n\n\t\t/*transit = {}\n\t\tfor (var prop in empty) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(empty, prop)) {\n\t\t\t\ttransit[prop] = obj[prop];\n\t\t\t}\n\t\t}*/\n\n\t\treturn m.call(history, Object.assign({}, state || {}, transit), title, url)\n\t}\n\tconst wrap = m => (state, title, url) => {\n\t\tconsole.log(`ReplaceState called`)\n\n\t\treturn m.call(history, Object.assign({}, history.state, state || {}, transit), title, url)\n\t}\n\thistory.pushState = wrapPush(history.pushState);\n\thistory.replaceState = wrap(history.replaceState);\n\treturn { set, get, flush, setEmpty };\n}\n"],"names":["history","get","set","let","m","transit","previousReplaceState","replaceState","pushState","state","title","url","console","log","Object","assign","call","wrap","key","value","obj"],"mappings":"eAae,WAEd,GAAuB,oBAAZA,QACV,OAASC,iBAAUC,kBAGpBC,IAwBiBC,EAxBbC,KAGEC,EAAuBN,QAAQO,aA6CrC,OA5C0BP,QA0C1BA,QAAQQ,WAtBSJ,EAsBYJ,QAAQQ,mBAtBdC,EAAOC,EAAOC,GAepC,OAdAC,QAAQC,IAAI,oBAEZP,EAAqBQ,OAAOC,UAAWf,QAAQS,MAAOJ,IAGtDA,KASOD,EAAEY,KAAKhB,QAASc,OAAOC,UAAWN,MAAaJ,GAAUK,EAAOC,KAQxEX,QAAQO,sBANKH,mBAAMK,EAAOC,EAAOC,GAGhC,OAFAC,QAAQC,IAAI,uBAELT,EAAEY,KAAKhB,QAASc,OAAOC,UAAWf,QAAQS,MAAOA,MAAaJ,GAAUK,EAAOC,IAGhEM,CAAKjB,QAAQO,4BAxCvBW,EAAKC,GACjBd,EAAQa,GAAOC,EACfP,QAAQC,wBAAwBK,QAASC,iBAH9BD,UAAOlB,QAAQS,OAAST,QAAQS,MAAMS,qBAajDN,QAAQC,IAAI,cACZD,QAAQC,IAAIR,GAEZL,QAAQO,aAAaF,sBAPJe"}