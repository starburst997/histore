{"version":3,"file":"histore.m.js","sources":["../histore.js"],"sourcesContent":["/**\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default function histore() {\n\t// Server\n\tif (typeof history === 'undefined') {\n\t\treturn { get() {}, set () {} };\n\t}\n\n\tlet initialized = true\n\tif (window.transit === undefined) {\n\t\twindow.transit = {}\n\t\tinitialized = false\n\t}\n\n\tconst previousReplaceState = history.replaceState\n\tconst previousPushState = history.pushState\n\n\tconst get = key => history.state && history.state[key];\n\tconst set = (key, value) => {\n\t\twindow.transit[key] = value;\n\t\tconsole.log(`*** Set transit: ${key} / ${value}`)\n\n\t\t//const state = {};\n\t\t//state[key] = value;\n\t\t//history.replaceState(state);\n\t};\n\tconst flush = () => {\n\t\tconsole.log(`*** Flush:`)\n\t\tconsole.log(window.transit)\n\n\t\thistory.replaceState(window.transit);\n\t}\n\n\tconst wrap = m => (state, title, url) => {\n\t\tconsole.log(`ReplaceState called`)\n\t\tconsole.log(Object.assign({}, history.state, state || {}))\n\n\t\treturn m.call(history, Object.assign({}, history.state, state || {}), title, url)\n\t}\n\n\tconst wrapPush = m => (state, title, url) => {\n\t\tconsole.log(`PushState called`)\n\t\thistory.replaceState(window.transit)\n\n\t\t// TODO: Reset function here\n\t\twindow.transit.position = 0\n\n\t\tconsole.log(Object.assign({}, history.state, state || {}, window.transit))\n\n\t\treturn m.call(history, Object.assign({}, history.state, state || {}, window.transit), title, url)\n\t}\n\n\tif (!initialized) {\n\t\thistory.pushState = wrapPush(history.pushState);\n\t\thistory.replaceState = wrap(history.replaceState);\n\t}\n\n\treturn { set, get, flush };\n}\n"],"names":["history","get","set","let","m","initialized","undefined","window","transit","pushState","state","title","url","console","log","replaceState","position","Object","assign","call","wrap","key","value"],"mappings":"eAae,WAEd,GAAuB,oBAAZA,QACV,OAASC,iBAAUC,kBAGpBC,IAgCiBC,EAhCbC,GAAc,EAiDlB,YAhDuBC,IAAnBC,OAAOC,UACVD,OAAOC,WACPH,GAAc,GAGcL,QACHA,QAqCrBK,IACJL,QAAQS,WAbQL,EAaaJ,QAAQS,mBAbfC,EAAOC,EAAOC,GASpC,OARAC,QAAQC,IAAI,oBACZd,QAAQe,aAAaR,OAAOC,SAG5BD,OAAOC,QAAQQ,SAAW,EAE1BH,QAAQC,IAAIG,OAAOC,UAAWlB,QAAQU,MAAOA,MAAaH,OAAOC,UAE1DJ,EAAEe,KAAKnB,QAASiB,OAAOC,UAAWlB,QAAQU,MAAOA,MAAaH,OAAOC,SAAUG,EAAOC,KAK7FZ,QAAQe,sBArBIX,mBAAMM,EAAOC,EAAOC,GAIhC,OAHAC,QAAQC,IAAI,uBACZD,QAAQC,IAAIG,OAAOC,UAAWlB,QAAQU,MAAOA,QAEtCN,EAAEe,KAAKnB,QAASiB,OAAOC,UAAWlB,QAAQU,MAAOA,OAAcC,EAAOC,IAiBtDQ,CAAKpB,QAAQe,6BApCxBM,EAAKC,GACjBf,OAAOC,QAAQa,GAAOC,EACtBT,QAAQC,wBAAwBO,QAASC,iBAH9BD,UAAOrB,QAAQU,OAASV,QAAQU,MAAMW,qBAUjDR,QAAQC,IAAI,cACZD,QAAQC,IAAIP,OAAOC,SAEnBR,QAAQe,aAAaR,OAAOC"}